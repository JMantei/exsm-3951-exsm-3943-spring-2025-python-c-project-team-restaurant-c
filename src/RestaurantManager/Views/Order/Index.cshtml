@model IEnumerable<RestaurantManager.Models.MenuItem>
@using RestaurantManager.Enums

@{
    ViewBag.Title = "Order";
    var dietaryTags = (List<DietaryTag>)ViewBag.DietaryTags;
    var viewCart = Context.Request.Query["viewCart"].ToString().ToLower() == "true";
    var currentOrder = ViewBag.Cart as RestaurantManager.Models.Order;

    var orderTypes = Enum.GetValues(typeof(RestaurantManager.Enums.OrderType))
    .Cast<RestaurantManager.Enums.OrderType>()
    .ToList();

    var selectedType = (OrderType)(ViewBag.SelectedType ?? OrderType.TakeOut);

    ViewBag.OrderTypes = orderTypes;
}

<div class="banner-image position-relative text-white text-center">
    <img src="~/images/drinks-img.png" class="img-fluid w-100" alt="Restaurant Image" />
    <div class="banner-text position-absolute top-50 start-50 translate-middle">
        <h2 class="fw-bold text-light display-4">Order for Take Out or Delivery</h2>
    </div>
</div>

<div class="container py-5">
    <div class="rounded-4 shadow-sm p-4 mb-5 border border-primary-subtle d-flex justify-content-center my-4">

        <form id="orderTypeForm" asp-action="SaveOrder" method="post">
            <div class="btn-group toggle-btn-group" role="group" aria-label="Order Type Toggle">
                <!-- Take Out Radio Button -->
                <input type="radio" class="btn-check" name="selectedType" value="TakeOut" id="takeOutBtn"
                    autocomplete="off" @((selectedType == OrderType.TakeOut) ? "checked" : "")
                    onchange="window.location.href='@Url.Action("Index", new { selectedType = OrderType.TakeOut })'">
                <label class="btn btn-outline-primary" for="takeOutBtn">Take Out</label>

                <!-- Delivery Radio Button -->
                <input type="radio" class="btn-check" name="selectedType" value="Delivery" id="deliveryBtn"
                    autocomplete="off" @((selectedType == OrderType.Delivery) ? "checked" : "")
                    onchange="window.location.href='@Url.Action("Index", new { selectedType = OrderType.Delivery })'">
                <label class="btn btn-outline-primary" for="deliveryBtn">Delivery</label>

                <!-- Dine In Radio Button -->
                <input type="radio" class="btn-check" name="selectedType" value="DineIn" id="dineInBtn"
                    autocomplete="off" @((selectedType == OrderType.DineIn) ? "checked" : "")
                    onchange="window.location.href='@Url.Action("Index", new { selectedType = OrderType.DineIn })'">
                <label class="btn btn-outline-primary" for="dineInBtn">Dine In</label>
            </div>
        </form>
    </div>

    <div class="row">
        <partial name="_MenuSidebar" model="dietaryTags" />
        <div class="col-md-9">
            <partial name="_MenuGroupedItems" model="Model" />
        </div>
    </div>

    @if (viewCart && currentOrder != null)
    {
        @await Html.PartialAsync("_Cart", currentOrder)
    }

</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        //Get all the radio buttons (Take Out, Delivery & Dine In)
        var radioButtons = document.querySelectorAll('.btn-check');

        //Add even handlers to each button
        radioButtons.forEach(function (button) {
            button.addEventListener('change', function () {

                //Create URL with type of button selected
                var url = '@Url.Action("Index")?selectedType=' + this.value;

                //Get the updated page content
                fetch(url)
                    .then(response => response.text())
                    .then(html => {
                        //Instead of reloading page
                        //Create temp div and only replace part with menu
                        var temp = document.createElement('div');
                        temp.innerHTML = html;
                        var newContainer = temp.querySelector('.container');
                        document.querySelector('.container').innerHTML = newContainer.innerHTML;
                        history.pushState({}, '', url);
                    })
            });
        });
    });
</script>
