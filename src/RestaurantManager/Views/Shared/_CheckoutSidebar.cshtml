@model RestaurantManager.Models.Order
@using RestaurantManager.Enums

@{
    // Subtotal
    decimal subtotal = Model.OrderMenuItems?.Sum(item => item.Quantity * item.MenuItem.Price) ?? 0m;
    // Tax
    decimal tax = subtotal * 0.05m;
    // Tip
    decimal tip = Model.TipAmount == 0 ? 0m : Model.TipAmount;
    // Delivery Fee
    decimal deliveryFee = Model.Type == OrderType.Delivery ? 5.00m : 0.00m;

    //Delivery Distance *JUST SO IT RUNS*
    decimal deliveryDistanceKm = 0;

    // Rewards
    int userPoints = Model.User?.RewardsPoints ?? 0;
    bool canRedeem = userPoints >= 250 && subtotal > 20m;
    decimal rewardsDiscount = canRedeem ? 20.00m : 0m;

    decimal tip10 = Math.Round(subtotal * 0.10m, 2);
    decimal tip15 = Math.Round(subtotal * 0.15m, 2);
    decimal tip20 = Math.Round(subtotal * 0.20m, 2);
    bool isCustomTip = Model.TipAmount != 0 && Model.TipAmount != tip10 && Model.TipAmount != tip15 && Model.TipAmount !=
    tip20;

    // Total
    decimal total = Math.Round(Math.Max(0, (subtotal + tax + tip + deliveryFee) - rewardsDiscount), 2);
}
<!-- Right: Summary -->
<aside class="col-md-2 me-4 mb-4 sticky-sidebar d-flex flex-column"
    style="position: sticky; max-height: 40rem; width: 400px; background-color: white;">
    <div class="d-flex flex-column h-100">
        <h5 class="mb-4">Your Order</h5>

        <div class="d-flex justify-content-between mb-3">
            <span>Subtotal</span>
            <span>@subtotal.ToString("C2")</span>
        </div>

        <div class="d-flex justify-content-between mb-3">
            <span>Tax (5%)</span>
            <span>@tax.ToString("C2")</span>
        </div>

        <div class="border-top pt-3 mt-3">
            <div class="d-flex justify-content-between mb-2">
                <span>Tip</span>
                <span id="tipDisplay">@Model.TipAmount.ToString("C2")</span>
            </div>

            <div class="btn-group w-100 mb-2" role="group" aria-label="Tip Options">
                <input type="radio" class="btn-check tip-option" name="TipAmount" id="tip10" value="@tip10"
                    checked="@(Model.TipAmount == tip10)" autocomplete="off">
                <label class="btn btn-outline-primary" for="tip10">10%</label>

                <input type="radio" class="btn-check tip-option" name="TipAmount" id="tip15" value="@tip15"
                    checked="@(Model.TipAmount == tip15)" autocomplete="off">
                <label class="btn btn-outline-primary" for="tip15">15%</label>

                <input type="radio" class="btn-check tip-option" name="TipAmount" id="tip20" value="@tip20"
                    checked="@(Model.TipAmount == tip20)" autocomplete="off">
                <label class="btn btn-outline-primary" for="tip20">20%</label>

                <input type="radio" class="btn-check tip-option" name="TipAmount" id="tipOther" value="other"
                    checked="@(isCustomTip)" autocomplete="off">
                <label class="btn btn-outline-primary" for="tipOther">Other</label>
            </div>

            <input type="number" step="0.01" min="0" name="TipAmount" id="customTipInput" class="form-control mt-2"
                placeholder="Enter custom tip amount" style="display: none;" value="@Model.TipAmount"
                oninput="validateCustomTip()" />
            <span id="tipError" class="text-danger small" style="display: none;">Please enter a valid tip amount.</span>
        </div>

        @if (Model.Type == OrderType.Delivery && Model.DeliveryFee.HasValue)
        {
            <div class="d-flex justify-content-between mt-4 mb-2">
                <p>Delivery Distance: @deliveryDistanceKm km</p>
                <span>Delivery Fee</span>
                <span>@deliveryFee.ToString("C2")</span>
            </div>
        }

        @if (canRedeem)
        {
            <hr class="my-3" />

            <div class="d-flex justify-content-between" id="rewardsDiscountRow" style="display: flex;">
                <span>Harvest Club Rewards</span>
                <span id="rewardsDiscountDisplay">@("-" + rewardsDiscount.ToString("C2"))</span>
            </div>
            <div class="form-check mt-2">
                <input class="form-check-input" type="checkbox" value="" id="redeemCheckbox" checked>
                <label class="form-check-label" for="redeemCheckbox">
                    Redeem 250 points for $20 off
                </label>
            </div>
        }

        <hr class="my-3" />

        <div class="d-flex justify-content-between fw-bold fs-5 mb-5">
            <span>Total</span>
            <span id="totalDisplay">@total.ToString("C2")</span>
        </div>

        @if (Model.OrderMenuItems != null && Model.OrderMenuItems.Any())
        {
            // Customer Information set to the Order Controller
            <form asp-controller="Order" asp-action="SubmitCheckout" method="post" class="mt-auto">
                <input type="hidden" name="selectedType" value="@Model.Type" />

                <input type="hidden" name="Subtotal" value="@subtotal" />
                <input type="hidden" name="Tax" value="@tax" />
                <input type="hidden" name="Total" id="totalInput" />

                <input type="hidden" name="TipAmount" id="tipAmountInput" />
                <input type="hidden" name="CustomTipAmount" id="customTipAmountInput" />

                <input type="hidden" name="DeliveryFee" value="@deliveryFee" />
                <input type="hidden" name="deliveryInstructions" id="deliveryInstructionsHidden" />

                <input type="hidden" id="hiddenScheduledTime" name="ScheduledTime" />

                <input type="hidden" id="externalSelectedAddressId" name="selectedAddressId" />
                <input type="hidden" name="deliveryDistanceKm" value="0" />
                <input type="hidden" name="redeemPoints" id="redeemPointsInput" value="@canRedeem" />
                <button type="submit" class="btn btn-primary w-100">
                    Place @RestaurantManager.Utilities.PropertyDisplayHelper.GetDisplayName(Model.Type) Order
                </button>
            </form>
        }
    </div>
</aside>

<script>
    const subtotal = parseFloat("@subtotal");
    const tax = parseFloat("@tax");
    const deliveryFee = parseFloat("@deliveryFee");
    const rewardsDiscount = parseFloat("@rewardsDiscount");

    const tipDisplay = document.getElementById('tipDisplay');
    const totalDisplay = document.getElementById('totalDisplay');
    const customTipInput = document.getElementById('customTipInput');
    const tipRadios = document.querySelectorAll('.tip-option');

    function updateTipAndTotal() {
        const selectedTip = document.querySelector('input[name="TipAmount"]:checked');
        const redeemCheckbox = document.getElementById('redeemCheckbox');

        let applyRewards = false;
        if (redeemCheckbox) {
            const canRedeem = !redeemCheckbox.disabled;
            applyRewards = redeemCheckbox.checked && canRedeem;
        }

        let tipAmount = 0;

        if (selectedTip?.value === "other") {
            tipAmount = parseFloat(customTipInput.value) || 0;
            document.getElementById('customTipAmountInput').value = tipAmount.toFixed(2);
            document.getElementById('tipAmountInput').value = tipAmount.toFixed(2);
        } else {
            tipAmount = parseFloat(selectedTip?.value) || 0;
            document.getElementById('tipAmountInput').value = tipAmount.toFixed(2);
            document.getElementById('customTipAmountInput').value = "";
        }

        const discount = applyRewards ? 20.00 : 0;
        const taxAmount = subtotal * 0.05;
        const totalBeforeDiscount = subtotal + taxAmount + tipAmount + deliveryFee;
        const finalTotal = Math.max(0, totalBeforeDiscount - discount);

        tipDisplay.textContent = tipAmount.toLocaleString("en-CA", { style: "currency", currency: "CAD" });
        totalDisplay.textContent = finalTotal.toLocaleString("en-CA", { style: "currency", currency: "CAD" });

        document.getElementById('redeemPointsInput').value = applyRewards.toString();

        const discountRow = document.getElementById('rewardsDiscountRow');
        const rewardsDisplay = document.getElementById('rewardsDiscountDisplay');

        if (redeemCheckbox && redeemCheckbox.checked) {
            if (discountRow) {
                discountRow.style.display = 'flex';
                rewardsDisplay.textContent = "-$20.00";
            }
        } else {
            if (discountRow) {
                discountRow.style.display = 'none';
                rewardsDisplay.textContent = "";
            }
        }

        localStorage.setItem("totalBeforeRewards", totalBeforeDiscount.toFixed(2));
        document.getElementById('totalInput').value = finalTotal.toFixed(2);
    }

    function validateCustomTip() {
        const val = parseFloat(customTipInput.value);
        const error = document.getElementById('tipError');
        if (isNaN(val) || val <= 0) {
            error.style.display = 'block';
        } else {
            error.style.display = 'none';
            updateTipAndTotal();
        }
    }

    tipRadios.forEach(radio => {
        radio.addEventListener('change', () => {
            if (radio.value === "other") {
                customTipInput.style.display = 'block';
                customTipInput.focus();
            } else {
                customTipInput.style.display = 'none';
            }
            updateTipAndTotal();
        });
    });

    customTipInput.addEventListener('input', () => {
        document.getElementById('tipOther').checked = true;
        updateTipAndTotal();
    });

    document.getElementById('redeemCheckbox')?.addEventListener('change', updateTipAndTotal);

    document.addEventListener("DOMContentLoaded", function () {
        const selected = document.querySelector('input[name="TipAmount"]:checked');
        if (selected?.value === "other") {
            customTipInput.style.display = 'block';
        } else {
            customTipInput.style.display = 'none';
        }
        updateTipAndTotal();
    });

    document.querySelector('form')?.addEventListener('submit', function (e) {
        const selected = document.querySelector('input[name="TipAmount"]:checked');
        const customTip = parseFloat(customTipInput.value);

        if (selected && selected.value === "other" && !isNaN(customTip) && customTip > 0) {
            document.getElementById('tipAmountInput').value = customTip.toFixed(2);
            document.getElementById('customTipAmountInput').value = customTip.toFixed(2);
        } else if (selected) {
            document.getElementById('tipAmountInput').value = selected.value;
            document.getElementById('customTipAmountInput').value = "";
        }
    });
</script>
