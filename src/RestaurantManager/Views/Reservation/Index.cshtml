@model RestaurantManager.Models.Reservation

@{
    ViewBag.Title = "Book a Table";
}

<div class="reservation-background">
    <div class="reservation-overlay">
        <div class="reservation-form-card container py-5">
            <h2 class="text-center mb-4">Book Table</h2>

            <form id="reservationForm" method="post" action="@Url.Action("BookAndConfirm", "Reservation")">
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    <label for="ReservationDateTime">Reservation Date & Time</label>
                    <input type="datetime-local" id="ReservationDateTime" name="ReservationDateTime" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" value="@DateTime.Now.AddHours(1).ToString("yyyy-MM-ddTHH:mm")" required />
                    <div id="datetimeError" class="text-danger mt-1" style="display: none; font-size: 0.875rem;"></div>                    
                </div>

                <div class="form-group mb-3">
                    <label for="GuestCount">Number of Guests</label>
                    <input type="number" id="GuestCount" name="GuestCount" class="form-control" min="1" max="50" value="1" required />
                </div>

                <div class="form-group mb-3">
                    <label for="Notes">Additional Reservation Requests</label>
                    <textarea id="Notes" name="Notes" class="form-control" rows="3" placeholder="Special occasions, accessibility needs, dietary restrictions, etc."></textarea>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Contact Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="FirstName">First Name</label>
                                    <input type="text" id="FirstName" name="FirstName" class="form-control" value="@ViewBag.FirstName" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="LastName">Last Name</label>
                                    <input type="text" id="LastName" name="LastName" class="form-control" value="@ViewBag.LastName" required />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="Email">Email</label>
                                    <input type="email" id="Email" name="Email" class="form-control" value="@ViewBag.Email" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="Phone">Phone Number</label>
                                    <input type="tel" id="Phone" name="Phone" class="form-control" value="@ViewBag.Phone" required />
                                </div>
                            </div>
                        </div>
                        <small class="text-muted">
                            <i class="fas fa-info-circle"></i>
                            Contact information is taken from your profile. You can edit these details <a href="/CustomerDashboard" class="text-primary">here</a> if needed.
                        </small>
                    </div>
                </div>
            </form>
            <div class="text-center mt-4">
                <button type="submit" form="reservationForm" class="btn btn-primary btn-lg w-100 py-3">
                    <i class="fas fa-calendar-check"></i> Book Now
                </button>
            </div>
        </div>
    </div>
</div>

<script>

document.addEventListener('DOMContentLoaded', function() {
    
    const datetimeInput = document.getElementById('ReservationDateTime');
    const form = document.getElementById('reservationForm');
    const errorDiv = document.getElementById('datetimeError');
    
    
    //Show error message when invalid time/date selected
    function showError(message) {
        errorDiv.textContent = message;
        errorDiv.style.display = 'block';
        datetimeInput.style.borderColor = '#dc3545'; 
    }
    
    //Hide error message on load and when correct date is selected
    function hideError() {
        errorDiv.style.display = 'none';
        datetimeInput.style.borderColor = ''; 
    }
    
    function validateDateTime() {
        const dt = new Date(datetimeInput.value);
        const day = dt.getDay();
        const hour = dt.getHours();
        
        console.log('Validating:', dt, 'Day:', day, 'Hour:', hour);
        
        //24 hour clock
        //Start with Sunday 10am to 9pm
        //Monday Closed
        //Tuesday/Wednesday/Thursday 11am to 10pm
        //Friday/Saturday 11am to 11pm
        const hours = [
            [10, 21],
            null,      
            [11, 22], 
            [11, 22],  
            [11, 22],  
            [11, 23],  
            [11, 23]   
        ];
        
        //Check if we're open that day and if the hour is during open
        const isValid = hours[day] && hour >= hours[day][0] && hour < hours[day][1];
        console.log('Is valid:', isValid);
        
        if (!isValid) {
            //Show error is time is outside open and not monday
            if (hours[day]) {
                showError('Please select a time during restaurant hours');
            } 
            //Show error if Monday is selected
            else {
                showError('We are closed on Mondays. Please choose a different day.');
            }
            //Reset input
            datetimeInput.value = ''; 
            return false;
        }
        //Hide error text
         else {
            hideError(); 
            return true;
        }
    }
    
    //Eventlistener to check when DateTime is changed
    datetimeInput.addEventListener('change', function() {
        console.log('DateTime changed');
        validateDateTime();
    });
    
    //Check when they try to submit the form
    form.addEventListener('submit', function(e) {
        console.log('Form submit attempted');
        if (!validateDateTime()) {
            console.log('Validation failed, preventing submit');
            e.preventDefault();
            return false;
        }
        console.log('Validation passed, allowing submit');
    });
    
    //Hide error when changes are being made
    datetimeInput.addEventListener('input', function() {
        if (errorDiv.style.display === 'block') {
            hideError();
        }
    });
});
</script>

<style>
    .reservation-background {
        background: url('/images/patio.png') no-repeat center center;
        background-size: cover;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .reservation-overlay {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        padding: 2rem;
        max-width: 600px;
        width: 100%;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
    }

    .reservation-form-card h2 {
        font-weight: 600;
    }

    .form-control {
        border-radius: 0.5rem;
    }

    .card {
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border-radius: 8px;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        border-radius: 8px 8px 0 0 !important;
    }

    .card-header h5 {
        color: #495057;
        font-weight: 600;
    }

    .btn-primary {
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
</style>